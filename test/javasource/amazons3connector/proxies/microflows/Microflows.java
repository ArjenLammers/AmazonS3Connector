// This file was generated by Mendix Business Modeler 5.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amazons3connector.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AmazonS3Connector module

	public static java.util.List<amazons3connector.proxies.S3Bucket> dS_GetBuckets(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "AmazonS3Connector.DS_GetBuckets", params);
			java.util.List<amazons3connector.proxies.S3Bucket> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<amazons3connector.proxies.S3Bucket>();
				for (IMendixObject obj : objs)
					result.add(amazons3connector.proxies.S3Bucket.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static amazons3connector.proxies.AwsConfig dS_GetConfig(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "AmazonS3Connector.DS_GetConfig", params);
			return result == null ? null : amazons3connector.proxies.AwsConfig.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static system.proxies.FileDocument dS_GetObject_FileContent(IContext context, amazons3connector.proxies.S3SummaryObject _s3SummaryObject, amazons3connector.proxies.S3Bucket _s3Bucket)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("S3SummaryObject", _s3SummaryObject == null ? null : _s3SummaryObject.getMendixObject());
			params.put("S3Bucket", _s3Bucket == null ? null : _s3Bucket.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "AmazonS3Connector.DS_GetObject_FileContent", params);
			return result == null ? null : system.proxies.FileDocument.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static java.util.List<amazons3connector.proxies.S3SummaryObject> dS_GetObjects(IContext context, amazons3connector.proxies.S3Bucket _s3Bucket)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("S3Bucket", _s3Bucket == null ? null : _s3Bucket.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "AmazonS3Connector.DS_GetObjects", params);
			java.util.List<amazons3connector.proxies.S3SummaryObject> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<amazons3connector.proxies.S3SummaryObject>();
				for (IMendixObject obj : objs)
					result.add(amazons3connector.proxies.S3SummaryObject.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_PutObject(IContext context, amazons3connector.proxies.S3Bucket _s3Bucket, amazons3connector.proxies.S3FileDocument _s3FileDocument)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("S3Bucket", _s3Bucket == null ? null : _s3Bucket.getMendixObject());
			params.put("S3FileDocument", _s3FileDocument == null ? null : _s3FileDocument.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_PutObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}